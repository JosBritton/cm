# vim: ft=yaml.ansible
- name: "Replace Bind9 zone file: {{ zone.zone_fqdn }}"
  ansible.builtin.template:
    src: "db.zone.j2"
    dest: "/var/lib/bind/db.{{ zone.zone_fqdn }}"
    owner: "bind"
    group: "bind"
    mode: "0644"
    force: "{{ not zone.dynamic }}"  # do not replace dynamic zone files if they exist
  when: (not dns_debug) and dns_is_primary
  register: zone_file_mock
  check_mode: true

- name: "Replace Bind9 running zone file"
  when: (not dns_debug) and zone_file_mock.changed
  block:
    - name: "Freeze zone: {{ zone.zone_fqdn }}"
      ansible.builtin.command:
        cmd: "rndc freeze {{ zone.zone_fqdn }}"
      changed_when: true
      when: zone.dynamic

    - name: "Block"
      block:
        - name: "Overwrite zone file"
          ansible.builtin.template:
            src: "db.zone.j2"
            dest: "/var/lib/bind/db.{{ zone.zone_fqdn }}"
            owner: "bind"
            group: "bind"
            mode: "0644"
            backup: true  # returns: "backup_file" attr
          register: zone_file

        - name: "Reload zone: {{ zone.zone_fqdn }}"
          ansible.builtin.command:
            cmd: "rndc reload {{ zone.zone_fqdn }}"
          changed_when: true

        - name: "Thaw zone: {{ zone.zone_fqdn }}"
          ansible.builtin.command:
            cmd: "rndc thaw {{ zone.zone_fqdn }}"
          changed_when: true
          when: zone.dynamic
      rescue:
        - name: "Restore previous configuration"
          ansible.builtin.copy:
            remote_src: true
            src: config.backup_file
            dest: "/etc/bind/named.conf.options"
            owner: "root"
            group: "bind"
            mode: "0644"

        - name: "Reload zone: {{ zone.zone_fqdn }}"
          ansible.builtin.command:
            cmd: "rndc reload {{ zone.zone_fqdn }}"
          changed_when: true

        - name: "Thaw zone: {{ zone.zone_fqdn }}"
          ansible.builtin.command:
            cmd: "rndc thaw {{ zone.zone_fqdn }}"
          changed_when: true
          when: zone.dynamic
      always:
        - name: "Remove temporary backup file"
          ansible.builtin.file:
            path: "{{ zone_file.backup_file }}"
            state: "absent"

{% if dns_is_primary %}
{% for zone in (dns_auth_zones | flatten(levels=1)) %}
{% if zone["dynamic"] %}
include "/etc/bind/ns-{{ zone.zone_fqdn }}_rndc-key";
{% endif %}
{% endfor %}
{% endif %}
acl "trusted" {
{% for ac_item in trusted_acl %}
    {{ ac_item }};
{% endfor %}
};

options {
    directory "/var/cache/bind";
    version "not currently available";
    allow-query { trusted; };
    listen-on-v6 { any; };
    empty-zones-enable yes;

{% if disable_empty_zones is defined %}
{% for empty_zone in disable_empty_zones %}
    disable-empty-zone "{{ empty_zone }}";
{% endfor %}
{% endif %}

    recursion {{ "no" if dns_is_auth else "yes" }};
    dnssec-validation {{ "auto" if dns_is_auth else "no" }};

{% if dns_is_auth %}
    allow-query-cache { localhost; };
{% else %}
    forwarders {
        127.0.0.1 port {{ dns_proxy_port }};
    };
{% endif %}
};

{% if dns_is_primary %}
# Because journal files for dynamic inline-signed zones currently cannot be located in a different directory than the primary zone file,
# and static zones are using inline-singing which will generate dynamic zones with journals that cannot be relocated, static zones must
# also be located in a bind user writable directory (/var/lib/bind/). Ideally journal files for inline-signed zones would be placed in
# the same directory as `key-directory`, but this is not the case (2024-03-06).
{% endif %}

{% for zone in (dns_auth_zones | flatten(levels=1)) %}
zone "{{ zone.zone_fqdn }}" {
{% if zone.dynamic %}
    masterfile-format raw;
{% endif %}
{% if dns_is_primary %}
    type primary;
{% if zone.dynamic %}
    update-policy { grant {{ zone.zone_fqdn }} zonesub {{ zone.dynamic_update_policy }}; };
{% endif %}
    file "/var/lib/bind/db.{{ zone.zone_fqdn }}";
    notify yes;
    also-notify {
{% for host in groups["ns_auth_secondary"] | map("extract", hostvars, "ansible_default_ipv4") | map(attribute="address") %}
        {{ host }};
{% endfor %}
{% for host in groups["ns_forward"] | map("extract", hostvars, "ansible_default_ipv4") | map(attribute="address") %}
        {{ host }};
{% endfor %}
    };
    allow-transfer {
{% for host in groups["ns_auth_secondary"] | map("extract", hostvars, "ansible_default_ipv4") | map(attribute="address") %}
        {{ host }};
{% endfor %}
{% for host in groups["ns_forward"] | map("extract", hostvars, "ansible_default_ipv4") | map(attribute="address") %}
        {{ host }};
{% endfor %}
    };
{% else %}
    type secondary;
    file "/var/lib/bind/db.{{ zone.zone_fqdn }}";
    primaries {
{% for host in groups["ns_auth_primary"] | map("extract", hostvars, "ansible_default_ipv4") | map(attribute="address") %}
        {{ host }};
{% endfor %}
    };
{% endif %}
};
{% endfor %}

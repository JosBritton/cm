- name: Install prerequisite packages
  ansible.builtin.apt:
    name:
      - qbittorrent-nox
    state: present
  notify: Restart qBittorrent service

- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Create qBittorrent group
  ansible.builtin.group:
    name: qbittorrent
    state: present
    system: false
  notify: Restart qBittorrent service

- name: Create qBittorrent user
  ansible.builtin.user:
    name: qbittorrent
    group: qbittorrent
    home: /nonexistent
    create_home: false
    shell: /usr/sbin/nologin
    system: false
    state: present
  notify: Restart qBittorrent service

- name: Configure additional mounts
  ansible.builtin.include_tasks:
    file: mounts.yml
  loop: "{{ bt_additional_mounts }}"
  loop_control:
    loop_var: mount

- name: Ensure all mounts are up
  ansible.builtin.command:
    argv:
      - mount
      - -a
  changed_when: false

- name: Create qBittorrent persistent data directory
  ansible.builtin.file:
    # path: /var/lib/qbittorrent/config
    path: /mnt/qbittorrent/profile/qBittorrent/config
    mode: "0755"
    owner: qbittorrent
    group: qbittorrent
    state: directory
  notify: Restart qBittorrent service

- name: Include secrets
  ansible.builtin.include_vars:
    file: inventory/secrets.yml

- name: Template qBittorrent config
  ansible.builtin.template:
    src: qBittorrent.conf.j2
    # dest: /var/lib/qbittorrent/config/qBittorrent.conf
    dest: /mnt/qbittorrent/profile/qBittorrent/config/qBittorrent.conf
    owner: qbittorrent
    group: qbittorrent
    mode: "0644"

- name: Create web-GUI SSL directory
  ansible.builtin.file:
    # path: /var/lib/qbittorrent/ssl
    path: /mnt/qbittorrent/profile/qBittorrent/ssl
    mode: "0700"
    owner: qbittorrent
    group: qbittorrent
    state: directory
  notify: Restart qBittorrent service

- name: Create web-GUI SSL certificate
  ansible.builtin.command:
    argv:
      - openssl
      - req
      - -new
      - -x509
      - -nodes
      - -out
      - /mnt/qbittorrent/profile/qBittorrent/ssl/server.crt
      - -keyout
      - /mnt/qbittorrent/profile/qBittorrent/ssl/server.key
      - -batch
  changed_when: true  # always create new SSL certificate
  notify: Restart qBittorrent service

- name: Change ownership of web-GUI SSL certificate
  ansible.builtin.file:
    path: /mnt/qbittorrent/profile/qBittorrent/ssl/server.crt
    owner: qbittorrent
    group: qbittorrent
    mode: "0644"
    state: file

- name: Change ownership of web-GUI SSL key
  ansible.builtin.file:
    path: /mnt/qbittorrent/profile/qBittorrent/ssl/server.key
    owner: qbittorrent
    group: qbittorrent
    mode: "0600"
    state: file

# - name: Link qBittorrent log file to stdout
#   ansible.builtin.file:
#     path: /var/lib/qbittorrent/

- name: Template out qBittorrent service file
  ansible.builtin.template:
    src: qbittorrent-nox.service.j2
    mode: "0644"
    owner: root
    group: root
    dest: /etc/systemd/system/qbittorrent-nox.service
  notify:
    - Restart qBittorrent service

- name: Enable qbittorrent service
  ansible.builtin.systemd_service:
    name: qbittorrent-nox.service
    enabled: true
